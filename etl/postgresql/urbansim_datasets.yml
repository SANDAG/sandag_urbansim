schema : urbansim

assessor_transactions :
    in_query_non_spatial: >
        SELECT
            ROW_NUMBER() OVER (ORDER BY parcel_id, tx_price) as assessor_transactions_id
            ,parcel_id
            ,tx_price
        FROM
            (SELECT parcel_id, RANK() OVER (PARTITION BY parcel_id ORDER BY tx_date) as tx
                ,tx_date
                ,tx_price
            FROM estimation.assessor_par_transactions) x
        WHERE
            tx = 1
    index_col: assessor_transactions_id
    indexes :
        ix_assessor_transactions_tx_price : parcel_id
    ##Output
    out_table : assessor_transactions
    #Map columns
    column_data_types :
        assessor_transactions_id : !!python/name:sqlalchemy.Integer
        parcel_id : !!python/name:sqlalchemy.Integer
        tx_price : !!python/name:sqlalchemy.Integer

building_sqft_per_job :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            id
            ,luz_id
            ,development_type_id
            ,sqft_per_emp
        FROM spacecore.urbansim.building_sqft_per_job
    ##Index Column
    index_col : id
    ##Output
    out_table : building_sqft_per_job
    #Map columns
    column_data_types :
        id : !!python/name:sqlalchemy.Integer
        luz_id : !!python/name:sqlalchemy.Integer
        development_type_id : !!python/name:sqlalchemy.Integer
        sqft_per_emp : !!python/name:sqlalchemy.Float

buildings :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            building_id
            ,subparcel_id
            ,parcel_id
            ,block_id
            ,mgra_id
            ,luz_id
            ,development_type_id
            ,improvement_value
            ,residential_units
            ,residential_sqft
            ,non_residential_sqft
            ,job_spaces
            ,non_residential_rent_per_sqft
            ,price_per_sqft
            ,stories
            ,year_built
            ,data_source
            ,subparcel_assignment
            ,floorspace_source

        FROM
            spacecore.urbansim.buildings
    ##Index Column
    index_col : building_id
    indexes :
        ix_buildings_parcel_id: parcel_id
        ix_buidlings_development_type_id: development_type_id
    ##Input Query Spatial
    in_query_spatial : >
        SELECT
            building_id
            ,shape.STAsText() AS shape
            ,centroid.STAsText() AS centroid
        FROM
            spacecore.urbansim.buildings
    ##Output
    out_table : buildings
    #Map columns --> Notice special geometry column
    column_data_types :
        building_id : !!python/name:sqlalchemy.Integer
        subparcel_id : !!python/name:sqlalchemy.Integer
        parcel_id : !!python/name:sqlalchemy.Integer
        block_id : !!python/name:sqlalchemy.String
        mgra_id: !!python/name:sqlalchemy.Integer
        luz_id: !!python/name:sqlalchemy.Integer
        development_type_id : !!python/name:sqlalchemy.Integer
        improvement_value : !!python/name:sqlalchemy.Float
        residential_units : !!python/name:sqlalchemy.Integer
        residential_sqft :  !!python/name:sqlalchemy.Integer
        non_residential_sqft : !!python/name:sqlalchemy.Integer
        job_spaces : !!python/name:sqlalchemy.Integer
        non_residential_rent_per_sqft : !!python/name:sqlalchemy.Float
        price_per_sqft : !!python/name:sqlalchemy.Float
        stories : !!python/name:sqlalchemy.Integer
        year_built : !!python/name:sqlalchemy.Integer
        data_source : !!python/name:sqlalchemy.String
        subparcel_assignment : !!python/name:sqlalchemy.String
        floorspace_source : !!python/name:sqlalchemy.String
        shape : !!python/object:geoalchemy2.Geography { geometry_type: 'GEOMETRY', srid: 4326, spatial_index: True }
        centroid : !!python/object:geoalchemy2.Geography { geometry_type: 'POINT', srid: 4326, spatial_index: True }

development_type :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            development_type_id
            ,name
            ,building_form
            ,site_use
            ,priority
        FROM
            spacecore.ref.development_type
    ##Index Column
    index_col : development_type_id
    ##Output
    out_table : development_type
    #Map columns --> Notice special geometry column
    column_data_types :
        development_type_id : !!python/name:sqlalchemy.Integer
        name : !!python/name:sqlalchemy.String
        building_form : !!python/name:sqlalchemy.String
        site_use : !!python/name:sqlalchemy.String
        priority : !!python/name:sqlalchemy.Integer

edges :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            from_node
              ,to_node
              ,distance
        FROM
            spacecore.urbansim.edges
    ##Index Column
    index_col : ['from_node', 'to_node']
    ##Output
    out_table : edges
    #Map columns
    column_data_types :
        from_node : !!python/name:sqlalchemy.Integer
        to_node : !!python/name:sqlalchemy.Integer
        distance : !!python/name:sqlalchemy.Float

employment_controls :
    in_query_non_spatial: >
        SELECT
            ROW_NUMBER() OVER (ORDER BY yr, sector_id) as employment_control_id
            ,yr
            ,jobs as number_of_jobs
            ,sector_id
        FROM
            isam.defm.jobs
        WHERE
            dem_version = 'S0021'
            AND eco_version = '001'
            AND yr >= 2015
    index_col: employment_control_id
    indexes :
        ix_employment_ctrl_yr: yr
    ##Output
    out_table : employment_controls
    #Map columns
    column_data_types :
        employment_control_id : !!python/name:sqlalchemy.Integer
        yr : !!python/name:sqlalchemy.Integer
        number_of_jobs : !!python/name:sqlalchemy.Integer
        sector_id: !!python/name:sqlalchemy.Integer

fee_schedule :
    in_query_non_spatial: >
        SELECT
            development_type_id
            ,development_fee_per_unit_space_initial
        FROM
            urbansim.fee_schedule
    index_col: development_type_id
    indexes :
        ix_fee_schedule_development_type_id : development_type_id
    ##Output
    out_table : fee_schedule
    #Map columns
    column_data_types :
        development_type_id : !!python/name:sqlalchemy.Integer
        development_fee_per_unit_space_initial : !!python/name:sqlalchemy.Numeric

household_controls :
    in_query_non_spatial: >
        SELECT
            ROW_NUMBER() OVER (ORDER BY yr, hh_income_id) as household_control_id
            ,yr
            ,hh_income_id as income_quartile
            ,hh as households
        FROM
            isam.defm.households
        WHERE
            dem_version = 'S0021'
            AND eco_version = '001'
            AND yr > 2010

    index_col: household_control_id
    indexes :
        ix_household_ctrl_yr: yr
    ##Output
    out_table : household_controls
    #Map columns
    column_data_types :
        household_control_id : !!python/name:sqlalchemy.Integer
        yr : !!python/name:sqlalchemy.Integer
        income_quartile : !!python/name:sqlalchemy.Integer
        households: !!python/name:sqlalchemy.Integer

households :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            household_id
            ,scenario_id
            ,building_id
            ,tenure
            ,persons
            ,workers
            ,age_of_head
            ,income
            ,children
            ,race_id
            ,cars
        FROM
            spacecore.urbansim.households
    ##Index Column
    index_col : household_id
    indexes :
        ix_households_building_id: building_id
    ##Output
    out_table : households
    #Map columns
    column_data_types :
        household_id : !!python/name:sqlalchemy.Integer
        scenario_id : !!python/name:sqlalchemy.Integer
        building_id : !!python/name:sqlalchemy.Integer
        tenure : !!python/name:sqlalchemy.Integer
        persons : !!python/name:sqlalchemy.Integer
        workers : !!python/name:sqlalchemy.Integer
        age_of_head : !!python/name:sqlalchemy.Integer
        income : !!python/name:sqlalchemy.Integer
        children : !!python/name:sqlalchemy.Integer
        race_id : !!python/name:sqlalchemy.Integer
        cars : !!python/name:sqlalchemy.Integer

jobs :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            job_id
            ,building_id
            ,sector_id
        FROM
            spacecore.urbansim.jobs
    ##Index Column
    index_col : job_id
    indexes :
        ix_jobs_building_id: building_id
        ix_jobs_sector_id: sector_id
    ##Output
    out_table : jobs
    #Map columns
    column_data_types :
        job_id : !!python/name:sqlalchemy.Integer
        building_id : !!python/name:sqlalchemy.BigInteger
        sector_id : !!python/name:sqlalchemy.Integer

ludu2012 :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            OBJECTID
            ,subParcel AS subparcel_id
            ,lu
            ,plu
            ,planID
            ,siteID
            ,genOwnID
            ,apn
            ,parcelID AS parcel_id
            ,editFlag
            ,du
            ,MGRA
            ,regionID
        FROM spacecore.GIS.ludu2012
    ##Index Column
    index_col : OBJECTID
    indexes :
        ix_ludu2012_parcel_id: parcel_id
    ##Input Query Spatial
    in_query_spatial : >
        SELECT
            OBJECTID
            ,shape.STAsText() AS shape
        FROM
            spacecore.GIS.ludu2012
    ##Output
    out_table : ludu2012
    #Map columns --> Notice special geometry column
    column_data_types :
        OBJECTID : !!python/name:sqlalchemy.Integer
        subparcel_id : !!python/name:sqlalchemy.Integer
        parcel_id : !!python/name:sqlalchemy.Integer
        lu : !!python/name:sqlalchemy.Integer
        plu : !!python/name:sqlalchemy.Integer
        planID : !!python/name:sqlalchemy.Integer
        siteID: !!python/name:sqlalchemy.Integer
        genOwnID: !!python/name:sqlalchemy.Integer
        apn : !!python/name:sqlalchemy.String
        editFlag : !!python/name:sqlalchemy.String
        du : !!python/name:sqlalchemy.Integer
        MGRA :  !!python/name:sqlalchemy.Integer
        regionID : !!python/name:sqlalchemy.Integer
        shape : !!python/object:geoalchemy2.Geography { geometry_type: 'GEOMETRY', srid: 4326, spatial_index: True }

ludu2015 :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            OBJECTID
            ,subParcel AS subparcel_id
            ,lu
            ,plu
            ,planID
            ,siteID
            ,genOwnID
            ,apn
            ,parcelID AS parcel_id
            ,editFlag
            ,du
            ,MGRA
            ,regionID
        FROM spacecore.GIS.ludu2015
    ##Index Column
    index_col : OBJECTID
    indexes :
        ix_ludu2015_parcel_id: parcel_id
    ##Input Query Spatial
    in_query_spatial : >
        SELECT
            OBJECTID
            ,shape.STAsText() AS shape
        FROM
            spacecore.GIS.ludu2015
    ##Output
    out_table : ludu2015
    #Map columns --> Notice special geometry column
    column_data_types :
        OBJECTID : !!python/name:sqlalchemy.Integer
        subparcel_id : !!python/name:sqlalchemy.Integer
        parcel_id : !!python/name:sqlalchemy.Integer
        lu : !!python/name:sqlalchemy.Integer
        plu : !!python/name:sqlalchemy.Integer
        planID : !!python/name:sqlalchemy.Integer
        siteID: !!python/name:sqlalchemy.Integer
        genOwnID: !!python/name:sqlalchemy.Integer
        apn : !!python/name:sqlalchemy.String
        editFlag : !!python/name:sqlalchemy.String
        du : !!python/name:sqlalchemy.Integer
        MGRA :  !!python/name:sqlalchemy.Integer
        regionID : !!python/name:sqlalchemy.Integer
        shape : !!python/object:geoalchemy2.Geography { geometry_type: 'GEOMETRY', srid: 4326, spatial_index: True }

nodes :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            node
            ,x
            ,y
            ,on_ramp
        FROM
            spacecore.urbansim.nodes

    ##Index Column
    index_col : node
    ##Input Query Spatial
    in_query_spatial : >
        SELECT
            node
            ,geom.STAsText() AS shape
        FROM
            spacecore.urbansim.nodes
    ##Output
    out_table : nodes
    #Map columns --> Notice special geometry column
    column_data_types :
        node : !!python/name:sqlalchemy.Integer
        x : !!python/name:sqlalchemy.Float
        y : !!python/name:sqlalchemy.Float
        on_ramp : !!python/name:sqlalchemy.Integer
        shape : !!python/object:geoalchemy2.Geometry { geometry_type: 'POINT', srid: 2230, spatial_index: True }

parcels :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            parcel_id
            ,block_id
            ,mgra_id
            ,luz_id
            ,msa_id
            ,region_id
            ,development_type_id
            ,land_value
            ,parcel_acres
            ,proportion_undevelopable
            ,tax_exempt_status
            ,distance_to_freeway
            ,distance_to_onramp
            ,distance_to_coast
            ,distance_to_transit
        FROM
          spacecore.urbansim.parcels_test
    ##Index Column
    index_col : parcel_id
    indexes :
        ix_parcels_mgra_id: mgra_id
    ##Pandas Data Frame for spatial data
    in_query_spatial : >
        SELECT
            parcel_id
            ,shape.STAsText() as shape
            ,centroid.STAsText() as centroid
        FROM
            spacecore.urbansim.parcels_test
    ##Output
    out_table : parcels_test
    #Map columns --> Notice special geometry column
    column_data_types :
        parcel_id : !!python/name:sqlalchemy.Integer
        block_id : !!python/name:sqlalchemy.String
        mgra_id : !!python/name:sqlalchemy.Integer
        luz_id : !!python/name:sqlalchemy.Integer
        msa_id : !!python/name:sqlalchemy.Integer
        region_id : !!python/name:sqlalchemy.Integer
        development_type_id : !!python/name:sqlalchemy.Integer
        land_value : !!python/name:sqlalchemy.Integer
        parcel_acres : !!python/name:sqlalchemy.Float
        proportion_undevelopable : !!python/name:sqlalchemy.Numeric
        tax_exempt_status : !!python/name:sqlalchemy.String
        distance_to_freeway : !!python/name:sqlalchemy.Float
        distance_to_onramp : !!python/name:sqlalchemy.Float
        distance_to_coast : !!python/name:sqlalchemy.Float
        distance_to_transit : !!python/name:sqlalchemy.Float
        shape : !!python/object:geoalchemy2.Geometry { geometry_type: 'GEOMETRY', srid: 2230, spatial_index: True, management: False }
        centroid : !!python/object:geoalchemy2.Geometry { geometry_type: 'POINT', srid: 2230, spatial_index: True, management: False }

parks :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            subparcel as park_id
            ,shape.STCentroid().STX x
            ,shape.STCentroid().STY y
        FROM
            gis.landcore
        WHERE
            lu IN (
                7207
                ,7210
                ,7211
                ,7600
                ,7601
               ,7604
                ,7605)
    ##Index Column
    index_col : park_id
    indexes :
        ix_parks_id: park_id
    ##Output
    out_table : parks
    #Map columns
    column_data_types :
        park_id : !!python/name:sqlalchemy.Integer
        x : !!python/name:sqlalchemy.Numeric
        y : !!python/name:sqlalchemy.Numeric

scheduled_development :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            OBJECTID
            ,parcel_id
        	,development_type_id
            ,siteID
            ,siteName
            ,totalSqft
            ,empDen
            ,civEmp
            ,milEmp
            ,sfu
            ,mfu
            ,mhu
            ,civGq
            ,milGq
            ,source
            ,infoDate
            ,spaceSqFt
            ,startDate
            ,compDate
            ,resSqft
            ,nResSqft
            ,created_user
            ,created_date
            ,last_edited_user
            ,last_edited_date
            ,devTypeID
            ,SHAPE_Length
            ,SHAPE_Area
        FROM
            spacecore.urbansim.scheduled_development
    ##Index Column
    index_col : siteID
    indexes :
        ix_scheduled_development_parcel_id: parcel_id
    ##Input Query Spatial
    in_query_spatial : >
        SELECT
            siteID
            ,shape.STAsText() AS shape
        FROM
            spacecore.urbansim.scheduled_development
    ##Output
    out_table : scheduled_development
    #Map columns --> Notice special geometry column
    column_data_types :
        OBJECTID : !!python/name:sqlalchemy.Integer
        siteID : !!python/name:sqlalchemy.Integer
        parcel_id : !!python/name:sqlalchemy.Integer
        development_type_id : !!python/name:sqlalchemy.Integer
        siteName : !!python/name:sqlalchemy.String
        totalSqft : !!python/name:sqlalchemy.Integer
        empDen : !!python/name:sqlalchemy.Float
        civEmp : !!python/name:sqlalchemy.Integer
        milEmp : !!python/name:sqlalchemy.Integer
        sfu : !!python/name:sqlalchemy.Integer
        mfu : !!python/name:sqlalchemy.Integer
        mhu : !!python/name:sqlalchemy.Integer
        civGq : !!python/name:sqlalchemy.Integer
        milGq : !!python/name:sqlalchemy.Integer
        source : !!python/name:sqlalchemy.String
        infoDate : !!python/name:sqlalchemy.Date
        spaceSqFt : !!python/name:sqlalchemy.Integer
        startDate : !!python/name:sqlalchemy.Date
        compDate : !!python/name:sqlalchemy.Date
        resSqft : !!python/name:sqlalchemy.Integer
        nResSqft : !!python/name:sqlalchemy.Integer
        created_user : !!python/name:sqlalchemy.String
        created_date : !!python/name:sqlalchemy.Date
        last_edited_user : !!python/name:sqlalchemy.String
        last_edited_date : !!python/name:sqlalchemy.Date
        devTypeID : !!python/name:sqlalchemy.Integer
        SHAPE_Length : !!python/name:sqlalchemy.Float
        SHAPE_Area : !!python/name:sqlalchemy.Float
        shape : !!python/object:geoalchemy2.Geography { geometry_type: 'GEOMETRY', srid: 4326, spatial_index: True }

scheduled_development_parcels :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            parcel_id
            ,siteid
        FROM
            urbansim.scheduled_development_parcels
    ##Index Column
    index_col : parcel_id
    indexes :
        ix_scheduled_development_parcels_parcel_id: parcel_id
        ix_scheduled_development_parcels_site_id: siteid
    ##Output
    out_table : scheduled_development_parcels
    #Map columns
    column_data_types :
        parcel_id : !!python/name:sqlalchemy.Integer
        siteid : !!python/name:sqlalchemy.Integer

schools :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            objectID as id
            ,Shape.STX as x
            ,Shape.STY as y
        FROM
            gis.schools
        WHERE
            SOCType IN (
                'Junior High Schools (Public)'
                ,'K-12 Schools (Public)'
                ,'Preschool'
                ,'Elemen Schools In 1 School Dist. (Public)'
                ,'Elementary Schools (Public)'
                ,'Intermediate/Middle Schools (Public)'
                ,'High Schools (Public)'
                ,'Private')
    ##Index Column
    index_col : id
    indexes :
        ix_schools_id: id
    ##Output
    out_table : schools
    #Map columns
    column_data_types :
        id : !!python/name:sqlalchemy.Integer
        x : !!python/name:sqlalchemy.Numeric
        y : !!python/name:sqlalchemy.Numeric

sr13capacity_ludu2015 :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            ludu2015_parcel_id
            ,sr13_du
            ,sr13_cap_hs_with_negatives
            ,ludu2015_du
            ,sr13_cap_hs_growth_adjusted
            ,update_2015
            ,revised
        FROM ref.sr13capacity_ludu2015
    ##Index Column
    index_col : ludu2015_parcel_id
    indexes :
        ix_sr13_capacity_ludu15_parcel_id: ludu2015_parcel_id
    ##Output
    out_table : sr13_capacity
    #Map columns --> Notice special geometry column
    column_data_types :
        ludu2015_parcel_id : !!python/name:sqlalchemy.Integer
        sr13_du : !!python/name:sqlalchemy.Integer
        sr13_cap_hs_with_negatives : !!python/name:sqlalchemy.Integer
        ludu2015_du : !!python/name:sqlalchemy.Integer
        sr13_cap_hs_growth_adjusted : !!python/name:sqlalchemy.Integer
        update_2015 : !!python/name:sqlalchemy.String
        revised : !!python/name:sqlalchemy.String

transit :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            stopnum
            ,x
            ,y
        FROM
            gis.transit_stops
    ##Index Column
    index_col : stopnum
    indexes :
        ix_transit_stopnum_id: stopnum
    ##Output
    out_table : transit
    #Map columns
    column_data_types :
        stopnum : !!python/name:sqlalchemy.Integer
        x : !!python/name:sqlalchemy.Numeric
        y : !!python/name:sqlalchemy.Numeric

zoning_allowed_use :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            zoning_id
            ,zoning_allowed_use_id
            ,development_type_id
        FROM
            urbansim.zoning_allowed_use
    ##Index Column
    index_col : zoning_allowed_use_id
    indexes :
        ix_zoning_allowed_use_zoning_id: zoning_id
        ix_zoning_allowed_use_development_type_id: development_type_id
    ##Output
    out_table : zoning_allowed_use
    #Map columns
    column_data_types :
        zoning_id : !!python/name:sqlalchemy.String
        zoning_allowed_use_id : !!python/name:sqlalchemy.Integer
        development_type_id : !!python/name:sqlalchemy.Integer

zoning :
    ##Input Query
    in_query_non_spatial : >
        SELECT
            zoning_id
            ,notes
        FROM
            spacecore.urbansim.zoning
    ##Index Column
    index_col : zoning_id
    indexes :
        ix_zoning_jurisdiction_id: zoning_id
    ##Output
    out_table : zoning
    #Map columns --> Notice special geometry column
    column_data_types :
        zoning_id : !!python/name:sqlalchemy.String
        notes : !!python/name:sqlalchemy.Text


