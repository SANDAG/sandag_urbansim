building_sqft_per_job :
    ##Input Query
    in_query_non_spatial : >
        SELECT TOP 100
            id
            ,luz_id
            ,development_type_id
            ,sqft_per_emp
        FROM spacecore.urbansim.building_sqft_per_job
    ##Index Column
    index_col : id
    ##Output
    out_table : building_sqft_per_job
    #Map columns
    column_data_types :
        id : !!python/name:sqlalchemy.Integer
        luz_id : !!python/name:sqlalchemy.Integer
        development_type_id : !!python/name:sqlalchemy.Integer
        sqft_per_emp : !!python/name:sqlalchemy.Float

buildings :
    ##Input Query
    in_query_non_spatial : >
        SELECT TOP 100
            building_id
            ,development_type_id
            ,parcel_id
            ,improvement_value
            ,residential_units
            ,residential_sqft
            ,non_residential_sqft
            ,job_spaces
            ,non_residential_rent_per_sqft
            ,price_per_sqft
            ,stories
            ,year_built
        FROM
            spacecore.urbansim.buildings
    ##Index Column
    index_col : building_id
    ##Input Query Spatial
    in_query_spatial : >
        SELECT TOP 100
            building_id
            ,shape.STAsText() AS shape
        FROM
            spacecore.urbansim.buildings
    ##Output
    out_table : buildings
    #Map columns --> Notice special geometry column
    column_data_types :
        building_id : !!python/name:sqlalchemy.Integer
        development_type_id : !!python/name:sqlalchemy.Integer
        parcel_id : !!python/name:sqlalchemy.Integer
        improvement_value : !!python/name:sqlalchemy.Float
        residential_units : !!python/name:sqlalchemy.Integer
        residential_units :  !!python/name:sqlalchemy.Integer
        non_residential_sqft : !!python/name:sqlalchemy.Integer
        job_spaces : !!python/name:sqlalchemy.Integer
        non_residential_rent_per_sqft : !!python/name:sqlalchemy.Float
        price_per_sqft : !!python/name:sqlalchemy.Float
        stories : !!python/name:sqlalchemy.Integer
        year_built : !!python/name:sqlalchemy.Integer
        shape : !!python/name:geoalchemy2.Geography #('Geometry', srid=4326)

development_type :
    ##Input Query
    in_query_non_spatial : >
        SELECT TOP 100
            development_type_id
            ,name
            ,building_form
            ,site_use
            ,priority
        FROM
            spacecore.ref.development_type
    ##Index Column
    index_col : development_type_id
    ##Output
    out_table : development_type
    #Map columns --> Notice special geometry column
    column_data_types :
        development_type_id : !!python/name:sqlalchemy.Integer
        name : !!python/name:sqlalchemy.String
        building_form : !!python/name:sqlalchemy.String
        site_use : !!python/name:sqlalchemy.String
        priority : !!python/name:sqlalchemy.Integer
edges :
    ##Input Query
    in_query_non_spatial : >
        SELECT TOP 100
            from_node
              ,to_node
              ,distance
        FROM
            spacecore.urbansim.edges
    ##Index Column
    index_col : ['from_node', 'to_node']
    ##Output
    out_table : edges
    #Map columns
    column_data_types :
        from_node : !!python/name:sqlalchemy.Integer
        to_node : !!python/name:sqlalchemy.Integer
        distance : !!python/name:sqlalchemy.Float

households :
    ##Input Query
    in_query_non_spatial : >
        SELECT TOP 100
            household_id
            ,scenario_id
            ,building_id
            ,tenure
            ,persons
            ,workers
            ,age_of_head
            ,income
            ,children
            ,race_id
            ,cars
        FROM
            spacecore.urbansim.households
    ##Index Column
    index_col : household_id
    ##Output
    out_table : households
    #Map columns
    column_data_types :
        household_id : !!python/name:sqlalchemy.Integer
        scenario_id : !!python/name:sqlalchemy.Integer
        building_id : !!python/name:sqlalchemy.Integer
        tenure : !!python/name:sqlalchemy.Integer
        persons : !!python/name:sqlalchemy.Integer
        workers : !!python/name:sqlalchemy.Integer
        age_of_head : !!python/name:sqlalchemy.Integer
        income : !!python/name:sqlalchemy.Integer
        children : !!python/name:sqlalchemy.Integer
        race_id : !!python/name:sqlalchemy.Integer
        cars : !!python/name:sqlalchemy.Integer

jobs :
    ##Input Query
    in_query_non_spatial : >
        SELECT TOP 100
            job_id
            ,building_id
            ,sector_id
        FROM
            spacecore.urbansim.jobs
    ##Index Column
    index_col : job_id
    ##Output
    out_table : jobs
    #Map columns
    column_data_types :
        job_id : !!python/name:sqlalchemy.Integer
        building_id : !!python/name:sqlalchemy.BigInteger
        sector_id : !!python/name:sqlalchemy.Integer

nodes :
    ##Input Query
    in_query_non_spatial : >
        SELECT TOP 100
            node
            ,x
            ,y
            ,on_ramp
        FROM
            spacecore.urbansim.nodes

    ##Index Column
    index_col : node
    ##Input Query Spatial
    in_query_spatial : >
        SELECT TOP 100
            node
            ,geom.STAsText() AS shape
        FROM
            spacecore.urbansim.nodes
    ##Output
    out_table : nodes
    #Map columns --> Notice special geometry column
    column_data_types :
        building_id : !!python/name:sqlalchemy.Integer
        development_type_id : !!python/name:sqlalchemy.Integer
        parcel_id : !!python/name:sqlalchemy.Integer
        improvement_value : !!python/name:sqlalchemy.Float
        residential_units : !!python/name:sqlalchemy.Integer
        residential_sqft : !!python/name:sqlalchemy.Integer
        non_residential_sqft : !!python/name:sqlalchemy.Integer
        job_spaces : !!python/name:sqlalchemy.Integer
        non_residential_rent_per_sqft : !!python/name:sqlalchemy.Float
        price_per_sqft : !!python/name:sqlalchemy.Float
        stories : !!python/name:sqlalchemy.Integer
        year_built : !!python/name:sqlalchemy.Integer
        shape : !!python/name:geoalchemy2.Geography #('Geometry', srid=4326)

parcels :
    ##Input Query
    in_query_non_spatial : >
        SELECT TOP 100
            parcel_id
            ,development_type_id
            ,zoning_id
            ,land_value
            ,parcel_acres
            ,region_id
            ,mgra_id
            ,luz_id
            ,msa_id
            ,proportion_undevelopable
            ,tax_exempt_status
        FROM
          spacecore.urbansim.parcels
    ##Index Column
    index_col : parcel_id
    ##Pandas Data Frame for spatial data
    in_query_spatial : >
        SELECT TOP 100
            parcel_id
            ,shape.STAsText() as shape
            ,centroid.STAsText() as centroid
        FROM
            spacecore.urbansim.parcels
    ##Output
    out_table : parcels
    #Map columns --> Notice special geometry column
    column_data_types :
        parcel_id : !!python/name:sqlalchemy.Integer
        development_type_id : !!python/name:sqlalchemy.Integer
        zoning_id : !!python/name:sqlalchemy.VARCHAR
        land_value : !!python/name:sqlalchemy.Integer
        parcel_acres : !!python/name:sqlalchemy.Float
        region_id : !!python/name:sqlalchemy.Integer
        mgra_id : !!python/name:sqlalchemy.Integer
        luz_id : !!python/name:sqlalchemy.Integer
        msa_id : !!python/name:sqlalchemy.Integer
        proportion_undevelopable : !!python/name:sqlalchemy.Numeric
        tax_exempt_status : !!python/name:sqlalchemy.String
        shape_wkt : !!python/name:sqlalchemy.String
        shape : !!python/name:geoalchemy2.Geography #('Geometry', srid=4326)
        centroid : !!python/name:geoalchemy2.Geography #('Point', srid=4326)

zoning_allowed_use :
    ##Input Query
    in_query_non_spatial : >
        SELECT TOP 100
            zoning_id
            ,zoning_allowed_use_id
            ,development_type_id
        FROM
            urbansim.zoning_allowed_use
    ##Index Column
    index_col : zoning_id
    ##Output
    out_table : zoning_allowed_use
    #Map columns
    column_data_types :
        zoning_id : !!python/name:sqlalchemy.String
        zoning_allowed_use_id : !!python/name:sqlalchemy.String
        development_type_id : !!python/name:sqlalchemy.String

zoning :
    ##Input Query
    in_query_non_spatial : >
        SELECT TOP 100
            zoning_id
            ,jurisdiction_id
            ,zone_code
            ,region_id
            ,min_far
            ,max_far
            ,min_front_setback
            ,max_front_setback
            ,rear_setback
            ,side_setback
            ,min_dua
            ,max_dua
            ,max_building_height
        FROM
            spacecore.urbansim.zoning
    ##Index Column
    index_col : zoning_id
    ##Input Query Spatial
    in_query_spatial : >
        SELECT TOP 100
            zoning_id
            ,shape.STAsText() as shape
        FROM spacecore.urbansim.zoning
        WHERE shape IS NOT NULL
    ##Output
    out_table : zoning
    #Map columns --> Notice special geometry column
    column_data_types :
        zoning_id : !!python/name:sqlalchemy.String
        jurisdiction_id : !!python/name:sqlalchemy.Integer
        zone_code : !!python/name:sqlalchemy.String
        region_id : !!python/name:sqlalchemy.Integer
        min_far : !!python/name:sqlalchemy.Numeric
        max_far : !!python/name:sqlalchemy.Numeric
        min_front_setback : !!python/name:sqlalchemy.Numeric
        max_front_setback : !!python/name:sqlalchemy.Numeric
        rear_setback : !!python/name:sqlalchemy.Numeric
        side_setback : !!python/name:sqlalchemy.Numeric
        min_dua : !!python/name:sqlalchemy.Numeric
        max_dua : !!python/name:sqlalchemy.Numeric
        max_building_height : !!python/name:sqlalchemy.Integer
        allowed_uses : !!python/name:sqlalchemy.String
        shape : !!python/name:geoalchemy2.Geography #('Geometry', srid=4326)
